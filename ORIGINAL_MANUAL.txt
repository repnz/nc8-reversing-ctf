NC8 IS A REALLY SIMPLE ARCHITECTURE. COMPOSED OF 16 INSTRUCTIONS AND 16
REGISTERS, IT SHOULD BE POSSIBLE TO DO EXTENSIVE TASK SUCH AS RUNNING THE
MORALITY POINT SAFETY GUARD WITHOUT ANY ISSUE.

HERE'S A SIMPLE HELLO WORLD PROGRAM IN NC8:

00: E0     push [._start]
01: FE     pop pc
02: 00 25 ._start dw .start

.write
04: F1     pop r1 ; buf
05: F0     pop r0 ; len
06: DD     push lr ; link register
07: 1B     mov r2, -1
08: 1D     mov r3, 1
.write_loop
09: A6     jz .write_ret
0A: D0     push r0
0B: 31     mov r0, [r1]
0C: 02     int 2
0D: 47     add r1, r3
0E: F0     pop r0
0F: 42     add r0, r2
10: C9     jmp .write_loop
.write_ret
11: FE     pop pc


12: .hello db "Hello world!\n"
1F: ._hello dw .hello
21: ._hello_len dw 13
23: 00 04 ._write dw .write
.start
25: EC push [._hello_len] -4
26: E9 push [._hello]     -7
27: EC push [._write]     -4
28: FE pop pc
29: 00 int 0

THIS COMPILE TO THE VERY SHORT PROGRAM:

E0 FE 00 25 F1 F0 DD 1B 1D A6 D0 31 02 47 F0 42 C9 FE 48 65 6C 6C 6F 20 77 6F
72 6C 64 21 0A 00 12 00 0D 00 04 EC E9 EC FE 00

THE CURRENT MAINFRAME CONTAINS 4 PROGRAMS TO UNLOCK THE EMERGENCY MODE. THE
FIFTH HAS YET TO BE DEVELOPPED. THE MAINFRAME PROVIDES 2 SYSTEMS CALLS TO
VALIDATE THE FIFTH KEYS WITH AN ADVANCED SECURITY CHECK.

HERE'S A SKELETON HOW TO USE THEM:

push [._challenge_data] ; WHERE THE CHALLENGE DATA IS WRITTEN
pop r0
int 10 ; GET CHALLENGE DATA, 32 BYTES WRITTEN TO R0 ADDRESS

; TODO: SORT EACH BYTE OF THE CHALLENGE DATA
;       NOTE THAT ANY INTERRUPT DONE BETWEEN int 10 AND int 11 WILL RESET THE
;       INTERNAL CHALLENGE DATA.

push [._challenge_data] ; WHERE THE CHALLENGE DATA IS LOCATED
pop r0
int 11 ; VALIDATE THE CHALLENGE DATA IS SORTED. CHALLENGE DATA IS LOCATED AT R0,
       ; AND IF SUCCESFUL, THE SECURITY CODE WILL BE WRITTEN AT R0.

._challenge_data dw .challenge_data
.challenge_data db 0 * 32


THIS DOCUMENTATION IS INCOMPLETE, BUT I MUST GO, MY BOSS WANT TO MEET, I BELEVE
THIS IS ABOUT SOME WELL EARNED VACATION!