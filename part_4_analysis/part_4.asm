0x00 0xe0 push [+2]
0x01 0xfe pop pc ; call start

._start 0x2d
0x02 0x00 int 0
0x03 0x2d mov [r3], r1

; Reading secret code string
0x04 0x52 xor r0, r2
0x05 0x45 add r1, r1
0x06 0x41 add r0, r1
0x07 0x44 add r1, r0
0x08 0x49 add r2, r1
0x09 0x4e add r3, r2
0x0a 0x47 add r1, r3
0x0b 0x20 mov [r0], r0
0x0c 0x53 xor r0, r3
0x0d 0x45 add r1, r1
0x0e 0x43 add r0, r3
0x0f 0x52 xor r0, r2
0x10 0x45 add r1, r1
0x11 0x54 xor r1, r0
0x12 0x20 mov [r0], r0
0x13 0x43 add r0, r3
0x14 0x4f add r3, r3
0x15 0x44 add r1, r0
0x16 0x45 add r1, r1
0x17 0x20 mov [r0], r0
0x18 0x49 add r2, r1
0x19 0x4e add r3, r2
0x1a 0x54 xor r1, r0
0x1b 0x4f add r3, r3
0x1c 0x20 mov [r0], r0
0x1d 0x4d add r3, r1
0x1e 0x45 add r1, r1
0x1f 0x4d add r3, r1
0x20 0x4f add r3, r3
0x21 0x52 xor r0, r2
0x22 0x59 xor r2, r1
0x23 0x2e mov [r3], r2
0x24 0x2e mov [r3], r2
0x25 0x2e mov [r3], r2
0x26 0x0a int 10

; length of the string
0x27 0x00 int 0
0x28 0x23 mov [r0], r3

; 0x4 str address
0x29 0x00 int 0
0x2a 0x04 int 4

; write function
0x2b 0x00 int 0
0x2c 0xce jmp -2

.start

; write(reading secret)
0x2d 0xea push [-6]
0x2e 0xeb push [-5]
0x2f 0xec push [-4]
0x30 0xfe pop pc


; call secret buffering 0x3c
0x31 0xe3 push [+5]
0x32 0xfe pop pc


; jump to 0x45
0x33 0xe3 push [+5]
0x34 0xfe pop pc
0x35 0xce jmp -2

; 0x3c secret buffer function
0x36 0x00 int 0
0x37 0x3c mov r3, [r0]

; 0x45 function
0x38 0x00 int 0
0x39 0x45 add r1, r1

; 0x1000
0x3a 0x10 mov r0, -2
0x3b 0x00 int 0

; read secret buffer function
0x3c 0xee push [-2]
0x3d 0xf0 pop r0
0x3e 0x04 int 4
0x3f 0xdd push r13
0x40 0xfe pop pc


; 0x20 value
0x41 0x00 int 0
0x42 0x20 mov [r0], r0

; 0x40 value
0x43 0x00 int 0
0x44 0x40 add r0, r0


; some function
0x45 0xee push [-2] ; 0x40
0x46 0xeb push [-5] ; 0x20
0x47 0xec push [-4] ; 0x40

0x48 0xf1 pop r1    ; 0x40
0x49 0xfb pop r11   ; 0x20
0x4a 0xf9 pop r9    ; 0x40

0x4b 0xdd push r13
0x4c 0xfc pop r12
0x4d 0xdf push sp
0x4e 0xf0 pop r0	 ; current sp
0x4f 0x19 mov r2, 1
0x50 0x1f mov r3, -1
0x51 0x5d xor r3, r1 ; 0x40 ^ 0xFFFF -> 0xffbf
0x52 0x4e add r3, r2 ; 0xffe0
0x53 0x43 add r0, r3
0x54 0xd0 push r0
0x55 0xff pop sp	; set SP to 0x
0x56 0xd0 push r0
0x57 0xfa pop r10   ; 0x71
0x58 0xe0 push [+2] ; jump to 0x79
0x59 0xfe pop pc

; 0x79
0x5a 0x00 int 0
0x5b 0x79 or r2, r1


; please enter code
0x5c 0x50 xor r0, r0
0x5d 0x4c add r3, r0
0x5e 0x45 add r1, r1
0x5f 0x41 add r0, r1
0x60 0x53 xor r0, r3
0x61 0x45 add r1, r1
0x62 0x20 mov [r0], r0
0x63 0x45 add r1, r1
0x64 0x4e add r3, r2
0x65 0x54 xor r1, r0
0x66 0x45 add r1, r1
0x67 0x52 xor r0, r2
0x68 0x20 mov [r0], r0
0x69 0x43 add r0, r3
0x6a 0x4f add r3, r3
0x6b 0x44 add r1, r0
0x6c 0x45 add r1, r1
0x6d 0x20 mov [r0], r0
0x6e 0x23 mov [r0], r3
0x6f 0x34 mov r1, [r0]
0x70 0x0a int 10

; read()
0x71 0x00 int 0
0x72 0xdc push r12

; length of code
0x73 0x00 int 0
0x74 0x15 mov r1, 1

; please enter
0x75 0x00 int 0
0x76 0x5c xor r3, r0

; write
0x77 0x00 int 0
0x78 0xce jmp -2


; calls 
0x79 0xe8 push [-8] ; read()
0x7a 0xe9 push [-7] ; len
0x7b 0xea push [-6] ; please enter
0x7c 0xeb push [-5] ; write
0x7d 0xfe pop pc    ; write(please enter)

0x7e 0xf5 pop r5    ; read
0x7f 0xd9 push r9   ; 0x40
0x80 0xda push r10  ; the dest of the read
0x81 0xd5 push r5   ; read (r10, 0x40)
0x82 0xfe pop pc


0x83 0xdb push r11  ; r11, 0x20
0x84 0xe5 push [+7] ; value at 0x1000
0x85 0xda push r10  ; read dest
0x86 0xe5 push [+7] ; call check_function(read_dest, 0x1000, 0x20)
0x87 0xfe pop pc


0x88 0xa0 jz +2
0x89 0xc4 jmp +6
0x8a 0x00 int 0

; 0x100 value
0x8b 0x10 mov r0, -2
0x8c 0x00 int 0

0x8d 0x00 int 0
0x8e 0xa9 jz -7


; print code rejected
0x8f 0xe4 push [+6]
0x90 0xe5 push [+7]
0x91 0xe6 push [+8]
0x92 0xfe pop pc

0x93 0xdc push r12
0x94 0xfe pop pc


0x95 0x00 int 0
0x96 0x0e int 14

; 0x9b
0x97 0x00 int 0
0x98 0x9b div r2, r3

;write
0x99 0x00 int 0
0x9a 0xce jmp -2

0x9b 0x43 add r0, r3
0x9c 0x4f add r3, r3
0x9d 0x44 add r1, r0
0x9e 0x45 add r1, r1
0x9f 0x20 mov [r0], r0
0xa0 0x52 xor r0, r2
0xa1 0x45 add r1, r1
0xa2 0x4a add r2, r2
0xa3 0x45 add r1, r1
0xa4 0x43 add r0, r3
0xa5 0x54 xor r1, r0
0xa6 0x45 add r1, r1
0xa7 0x44 add r1, r0
0xa8 0x0a int 10


; call check_function(read_dest, 0x1000, 0x20)
; r5 = i
0xa9 0x50 xor r0, r0
0xaa 0xd0 push r0
0xab 0xf5 pop r5  ; return value (1/0)
0xac 0xf1 pop r1  ; second param - source
0xad 0xf2 pop r2  ; third param  - end_of_addresses
0xae 0xf3 pop r3  ; 4 param
0xaf 0xdd push r13
0xb0 0x4d add r3, r1
0xb1 0xd3 push r3
0xb2 0xf4 pop r4

0xb3 0xd4 push r4
0xb4 0xf0 pop r0

0xb5 0x51 xor r0, r1
0xb6 0xa2 jz +4
0xb7 0xc3 jmp +5
0xb8 0x00 int 0
0xb9 0xcb jmp -5
0xba 0xee push [-2]
0xbb 0xfe pop pc
0xbc 0x31 mov r0, [r1]
0xbd 0x3e mov r3, [r2]
0xbe 0x53 xor r0, r3
0xbf 0xa5 jz +7
0xc0 0x11 mov r0, 1
0xc1 0xd0 push r0
0xc2 0xf5 pop r5
0xc3 0xc1 jmp +3

; b3 value
0xc4 0x00 int 0
0xc5 0xb3 jnz +5

0xc6 0x11 mov r0, 1
0xc7 0x44 add r1, r0
0xc8 0x48 add r2, r0
0xc9 0xeb push [-5]
0xca 0xfe pop pc
0xcb 0xd5 push r5
0xcc 0xf0 pop r0
0xcd 0xfe pop pc

; write function
0xce 0xf1 pop r1
0xcf 0xf0 pop r0
0xd0 0xdd push r13
0xd1 0x1d mov r3, 1
0xd2 0x1b mov r2, -1
0xd3 0xa6 jz +8
0xd4 0xd0 push r0
0xd5 0x31 mov r0, [r1]
0xd6 0x02 int 2
0xd7 0x47 add r1, r3
0xd8 0xf0 pop r0
0xd9 0x42 add r0, r2
0xda 0xc9 jmp -7
0xdb 0xfe pop pc

; read function read(str, len)
0xdc 0xf1 pop r1 ; str
0xdd 0xf0 pop r0 ; len
0xde 0xdd push r13
0xdf 0x1d mov r3, 1
0xe0 0x1b mov r2, -1
0xe1 0xa6 jz +8
0xe2 0xd0 push r0
0xe3 0x01 int 1
0xe4 0x24 mov [r1], r0
0xe5 0x47 add r1, r3
0xe6 0xf0 pop r0
0xe7 0x42 add r0, r2
0xe8 0xc9 jmp -7
0xe9 0xfe pop pc